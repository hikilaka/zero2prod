name: Continous Integration

on: [ push, pull_request ]

env:
  CARGO_TERM_COLOR: always
  GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/rust-cargo
        with:
          command: check

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/rust-cargo
        with:
          command: test

  fmt:
    name: Format Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/rust-cargo
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/rust-cargo
        with:
          command: clippy
          args: -- -D warnings

  codecov:
    name: Codecov
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/rust-codecov
        with:
          codecov_token: ${{ secrets.CODECOV_TOKEN }}

  audit:
    name: Audit Codebase
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: sudo apt install libssl-dev
      - uses: ./.github/workflows/rust-cargo
        with:
          command: install
          args: cargo-audit
      - uses: ./.github/workflows/rust-cargo
        with:
          command: audit

  deploy:
    name: Deploy SIT
    runs-on: ubuntu-latest
    needs: [ check, test, fmt, clippy, codecov, audit ]
    if: success()
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7

      - name: Terraform Format
        id: fmt
        run: terraform -chdir=infrastructure fmt -check

      - name: Terraform Init
        id: init
        run: terraform -chdir=infrastructure init -no-color

      - name: Terraform Validate
        id: validate
        run: terraform -chdir=infrastructure validate -no-color

      - name: Terraform Plan SIT
        id: plan
        if: github.ref == 'refs/heads/master'
        run: terraform -chdir=infrastructure plan -var-file=env/dev.tfvars
